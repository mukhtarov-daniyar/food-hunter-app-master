# This is a basic workflow to help you get started with Actions

name: Develop CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ develop, release/*, hotfix/* ]
  pull_request:
    branches: [ develop, release/*, hotfix/* ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  linters:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
      - uses: c-hive/gha-yarn-cache@v1

      - name: Install node modules
        run: |
         npm install --legacy-peer-deps

      - name: Fix lint
        run: |
          npm run lint:fix

  prettier:
    needs: linters
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
      - uses: c-hive/gha-yarn-cache@v1

      - name: Install node modules
        run: |
         npm install --legacy-peer-deps

      - name: Fix prettier
        run: |
          npm run pretty:fix

  types:
    needs: [linters, prettier]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
      - uses: c-hive/gha-yarn-cache@v1

      - name: Install node modules
        run: |
         npm install --legacy-peer-deps

      - name: Fix types check
        run: |
          npm run tsc

  test:
    needs: [linters, prettier, types]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
      - uses: c-hive/gha-yarn-cache@v1

      - name: Install node modules
        run: |
          npm install --legacy-peer-deps

      - name: Tests
        run: |
          npm run test

  build-android:
    needs: [ linters, prettier, types, test]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
      - uses: c-hive/gha-yarn-cache@v1

      - name: Install node modules
        run: |
         npm install --legacy-peer-deps

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Build Android App Bundle
        run: |
          cd android && ./gradlew bundleRelease --no-daemon

  build-ios:
    needs: [ linters, prettier, types, test]

    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
      - uses: c-hive/gha-yarn-cache@v1

      - name: Install node modules
        run: |
          npm install --legacy-peer-deps
      - run: pod install
        working-directory: ios

      - run: xcodebuild clean archive -workspace testCiCdReactNative.xcworkspace -scheme testCiCdReactNative -archivePath testCiCdReactNative.xcarchive CODE_SIGNING_ALLOWED=NO | xcpretty
        working-directory: ios

  merge-branch:
    needs: [ linters, prettier, types, test, build-android, build-ios ]

    runs-on: ubuntu-latest
    if: contains(github.ref, 'refs/heads/release')
    steps:
      - uses: actions/checkout@v2
      - uses: everlytic/branch-merge@1.1.0
        with:
          github_token: ${{ github.token }}
          source_ref: ${{ github.ref }}
          target_branch: 'develop'
          commit_message_template: '[Automated] Merged {source_ref} into target {target_branch}'
